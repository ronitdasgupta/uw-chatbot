{"ast":null,"code":"var _jsxFileName = \"/Users/ronitdasgupta/Desktop/uw-chatbot/client/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  role,\n  content\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${role}`,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n_c = Message;\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [records, setRecords] = useState({});\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const getChatHistory = () => {\n    if (Object.keys(records).length === 0) {\n      return \"\";\n    }\n    const formattedHistory = Object.keys(records).map(key => {\n      const record = records[key];\n      return `Input: ${record.userInput}\\nResponse: ${record.response}\\n`;\n    });\n    const historyString = formattedHistory.join(\"\\n\");\n    return `Below is the chat history:\\n\\n${historyString}\\nPlease answer the user’s new input based on the chat history provided: `;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input) return; // Prevent sending empty messages\n\n    setInput('');\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setLoading(true);\n    const chatHistory = getChatHistory();\n    let combinedChat = chatHistory + input;\n    console.log(input);\n    console.log(combinedChat);\n    const response = await fetch('/ask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        combinedChat\n      })\n      // body: JSON.stringify({ chatHistory, input }),\n    });\n\n    const data = await response.json();\n    const assistantMessage = {\n      role: 'assistant',\n      content: data.answer\n    };\n    setMessages([...updatedMessages, assistantMessage]);\n    setLoading(false);\n    setRecords(prevRecords => {\n      const newCounter = Object.keys(prevRecords).length + 1;\n      const newRecord = {\n        userInput: input,\n        response: data.answer\n      };\n      const updatedRecords = {\n        ...prevRecords,\n        [newCounter]: newRecord\n      };\n      console.log(updatedRecords);\n      return updatedRecords;\n    });\n\n    // console.log(chatHistory)\n    if (chatHistory !== \"\") {\n      // console.log(chatHistory);\n      // Send chatHistory to OpenAI API\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"chatbot-title\",\n      children: \"University of Washington ChatBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          role: message.role,\n          content: message.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: handleInputChange,\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"7d13PB9eawuQZeLuyc4XDN2Xjho=\");\n_c2 = Chatbot;\nexport default Chatbot;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Message","role","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chatbot","_s","input","setInput","loading","setLoading","messages","setMessages","records","setRecords","handleInputChange","e","target","value","getChatHistory","Object","keys","length","formattedHistory","map","key","record","userInput","response","historyString","join","handleSubmit","preventDefault","userMessage","updatedMessages","chatHistory","combinedChat","console","log","fetch","method","headers","body","JSON","stringify","data","json","assistantMessage","answer","prevRecords","newCounter","newRecord","updatedRecords","message","index","onSubmit","type","onChange","placeholder","_c2","$RefreshReg$"],"sources":["/Users/ronitdasgupta/Desktop/uw-chatbot/client/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Chatbot.css';\n\nconst Message = ({ role, content }) => {\n  return <div className={`message ${role}`}>{content}</div>;\n};\n\nconst Chatbot = () => {\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [records, setRecords] = useState({});\n \n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const getChatHistory = () => {\n    if (Object.keys(records).length === 0) {\n      return \"\";\n    }\n\n    const formattedHistory = Object.keys(records).map((key) => {\n      const record = records[key];\n      return `Input: ${record.userInput}\\nResponse: ${record.response}\\n`;\n    });\n\n    const historyString = formattedHistory.join(\"\\n\");\n\n    return `Below is the chat history:\\n\\n${historyString}\\nPlease answer the user’s new input based on the chat history provided: `;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input) return; // Prevent sending empty messages\n \n    setInput('');\n \n    const userMessage = { role: 'user', content: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n \n    setLoading(true);\n\n    const chatHistory = getChatHistory();\n\n    let combinedChat = chatHistory + input;\n\n    console.log(input)\n    console.log(combinedChat)\n \n    const response = await fetch('/ask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ combinedChat }),\n      // body: JSON.stringify({ chatHistory, input }),\n    });\n \n    const data = await response.json();\n \n    const assistantMessage = { role: 'assistant', content: data.answer };\n    setMessages([...updatedMessages, assistantMessage]);\n \n    setLoading(false);\n \n    setRecords(prevRecords => {\n      const newCounter = Object.keys(prevRecords).length + 1;\n      const newRecord = { userInput: input, response: data.answer };\n      const updatedRecords = { ...prevRecords, [newCounter]: newRecord };\n      console.log(updatedRecords)\n      return updatedRecords;\n    });\n   \n\n    // console.log(chatHistory)\n    if (chatHistory !== \"\") {\n      // console.log(chatHistory);\n      // Send chatHistory to OpenAI API\n    }\n  };\n\n  return (\n    <div className=\"chatbot\">\n        <h1 className=\"chatbot-title\">University of Washington ChatBot</h1>\n      <div className=\"chat\">\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <Message key={index} role={message.role} content={message.content} />\n          ))}\n          {loading && <div className=\"message assistant\">Typing...</div>}\n        </div>\n        <div className=\"chat-input\">\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={input}\n              onChange={handleInputChange}\n              placeholder=\"Type a message...\"\n            />\n            <button type=\"submit\">Send</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACrC,oBAAOH,OAAA;IAAKI,SAAS,EAAG,WAAUF,IAAK,EAAE;IAAAG,QAAA,EAAEF;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3D,CAAC;AAACC,EAAA,GAFIT,OAAO;AAIb,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMuB,iBAAiB,GAAIC,CAAC,IAAK;IAC/BR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CAACS,MAAM,KAAK,CAAC,EAAE;MACrC,OAAO,EAAE;IACX;IAEA,MAAMC,gBAAgB,GAAGH,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CAACW,GAAG,CAAEC,GAAG,IAAK;MACzD,MAAMC,MAAM,GAAGb,OAAO,CAACY,GAAG,CAAC;MAC3B,OAAQ,UAASC,MAAM,CAACC,SAAU,eAAcD,MAAM,CAACE,QAAS,IAAG;IACrE,CAAC,CAAC;IAEF,MAAMC,aAAa,GAAGN,gBAAgB,CAACO,IAAI,CAAC,IAAI,CAAC;IAEjD,OAAQ,iCAAgCD,aAAc,2EAA0E;EAClI,CAAC;EAED,MAAME,YAAY,GAAG,MAAOf,CAAC,IAAK;IAChCA,CAAC,CAACgB,cAAc,CAAC,CAAC;IAClB,IAAI,CAACzB,KAAK,EAAE,OAAO,CAAC;;IAEpBC,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMyB,WAAW,GAAG;MAAErC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEU;IAAM,CAAC;IACpD,MAAM2B,eAAe,GAAG,CAAC,GAAGvB,QAAQ,EAAEsB,WAAW,CAAC;IAClDrB,WAAW,CAACsB,eAAe,CAAC;IAE5BxB,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMyB,WAAW,GAAGhB,cAAc,CAAC,CAAC;IAEpC,IAAIiB,YAAY,GAAGD,WAAW,GAAG5B,KAAK;IAEtC8B,OAAO,CAACC,GAAG,CAAC/B,KAAK,CAAC;IAClB8B,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAEzB,MAAMR,QAAQ,GAAG,MAAMW,KAAK,CAAC,MAAM,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER;MAAa,CAAC;MACrC;IACF,CAAC,CAAC;;IAEF,MAAMS,IAAI,GAAG,MAAMjB,QAAQ,CAACkB,IAAI,CAAC,CAAC;IAElC,MAAMC,gBAAgB,GAAG;MAAEnD,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEgD,IAAI,CAACG;IAAO,CAAC;IACpEpC,WAAW,CAAC,CAAC,GAAGsB,eAAe,EAAEa,gBAAgB,CAAC,CAAC;IAEnDrC,UAAU,CAAC,KAAK,CAAC;IAEjBI,UAAU,CAACmC,WAAW,IAAI;MACxB,MAAMC,UAAU,GAAG9B,MAAM,CAACC,IAAI,CAAC4B,WAAW,CAAC,CAAC3B,MAAM,GAAG,CAAC;MACtD,MAAM6B,SAAS,GAAG;QAAExB,SAAS,EAAEpB,KAAK;QAAEqB,QAAQ,EAAEiB,IAAI,CAACG;MAAO,CAAC;MAC7D,MAAMI,cAAc,GAAG;QAAE,GAAGH,WAAW;QAAE,CAACC,UAAU,GAAGC;MAAU,CAAC;MAClEd,OAAO,CAACC,GAAG,CAACc,cAAc,CAAC;MAC3B,OAAOA,cAAc;IACvB,CAAC,CAAC;;IAGF;IACA,IAAIjB,WAAW,KAAK,EAAE,EAAE;MACtB;MACA;IAAA;EAEJ,CAAC;EAED,oBACEzC,OAAA;IAAKI,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBL,OAAA;MAAII,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrET,OAAA;MAAKI,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBL,OAAA;QAAKI,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BY,QAAQ,CAACa,GAAG,CAAC,CAAC6B,OAAO,EAAEC,KAAK,kBAC3B5D,OAAA,CAACC,OAAO;UAAaC,IAAI,EAAEyD,OAAO,CAACzD,IAAK;UAACC,OAAO,EAAEwD,OAAO,CAACxD;QAAQ,GAApDyD,KAAK;UAAAtD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiD,CACrE,CAAC,EACDM,OAAO,iBAAIf,OAAA;UAAKI,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACNT,OAAA;QAAKI,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBL,OAAA;UAAM6D,QAAQ,EAAExB,YAAa;UAAAhC,QAAA,gBAC3BL,OAAA;YACE8D,IAAI,EAAC,MAAM;YACXtC,KAAK,EAAEX,KAAM;YACbkD,QAAQ,EAAE1C,iBAAkB;YAC5B2C,WAAW,EAAC;UAAmB;YAAA1D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACFT,OAAA;YAAQ8D,IAAI,EAAC,QAAQ;YAAAzD,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAACG,EAAA,CArGID,OAAO;AAAAsD,GAAA,GAAPtD,OAAO;AAuGb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAuD,GAAA;AAAAC,YAAA,CAAAxD,EAAA;AAAAwD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}